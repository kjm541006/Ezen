package com.jumin.springbootProject.controller;

import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

import com.jumin.springbootProject.dto.MemberDTO;
import com.jumin.springbootProject.service.MemberService;
import com.jumin.springbootProject.service.MemberService.LoginResult;

import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
public class MemberController {
	// 생성자 주입
	private final MemberService memberService;

	@GetMapping("/member/join")
	public String joinForm() {
		return "join";
	}
	
	@PostMapping("/member/join")
	public String join( @ModelAttribute MemberDTO memberDTO, Model model) {
		String joinResult = memberService.save(memberDTO);
		if(joinResult == "fail") {
			System.out.println("회원가입 에러");
			model.addAttribute("error", "이미 존재하는 이메일입니다.");
			return "join";
		}else {
			System.out.println("MemberController.save");
			System.out.println(memberDTO);
			memberService.save(memberDTO);
			return "joinSuccess";
		}
	}
	
	@GetMapping("/member/login")
	public String loginForm() {
		return "login";
	}
	
//	@PostMapping("/member/login")
//	public String login(@ModelAttribute MemberDTO memberDTO, HttpSession session, Model model) {
////		MemberDTO loginResult = memberService.login(memberDTO);
//		LoginResult loginResult = memberService.login(memberDTO);
//		if(loginResult == LoginResult.SUCCESS) {
//			model.addAttribute("loginId", memberDTO.getEmail());
//			System.out.println(loginResult);
//			return "main";
//		} else if(loginResult == LoginResult.EMAIL_NOT_FOUND) {
//			model.addAttribute("error", "존재하지 않는 이메일입니다.");
//			return "login";
//		} else if(loginResult == LoginResult.INVALID_PASSWORD) {
//			model.addAttribute("error", "비밀번호가 일치하지 않습니다.");
//			return "login";
//		} else {
//			return "login";
//		}
//	}
	
	@PostMapping("/member/login")
	public String login(@ModelAttribute MemberDTO memberDTO, HttpSession session) {
	    LoginResult loginResult = memberService.login(memberDTO);
	    if(loginResult == LoginResult.SUCCESS) {
	        session.setAttribute("loginId", memberDTO.getEmail());
	        System.out.println(loginResult);
	        return "redirect:/main?loginId=" + memberDTO.getEmail();
	    } else if(loginResult == LoginResult.EMAIL_NOT_FOUND) {
	        return "redirect:/login?error=존재하지 않는 이메일입니다.";
	    } else if(loginResult == LoginResult.INVALID_PASSWORD) {
	        return "redirect:/login?error=비밀번호가 일치하지 않습니다.";
	    } else {
	        return "redirect:/login";
	    }
	}

	
	
	
//	@PostMapping("/login")
//	public String login(MemberDTO memberDTO, HttpSession session) {
//	    LoginResult loginResult = memberService.login(memberDTO);
//	    if (loginResult == LoginResult.SUCCESS) {
//	        session.setAttribute("loginId", memberDTO.getEmail());
//	        return "success"; // 로그인 성공 시 처리할 URL 혹은 뷰 이름
//	    } else if (loginResult == LoginResult.EMAIL_NOT_FOUND) {
//	        return "email_not_found"; // 이메일을 찾을 수 없음을 알리는 URL 혹은 뷰 이름
//	    } else if (loginResult == LoginResult.INVALID_PASSWORD) {
//	        return "invalid_password"; // 잘못된 비밀번호를 알리는 URL 혹은 뷰 이름
//	    } else {
//	        return "failure"; // 기타 실패 시 처리할 URL 혹은 뷰 이름
//	    }
//	}

	
	
}
