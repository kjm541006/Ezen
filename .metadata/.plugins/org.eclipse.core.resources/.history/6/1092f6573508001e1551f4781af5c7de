package com.jumin.springbootProject.controller;

import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

import com.jumin.springbootProject.dto.MemberDTO;
import com.jumin.springbootProject.service.MemberService;

import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
public class MemberController {
	// 생성자 주입
	private final MemberService memberService;

	@GetMapping("/member/join")
	public String joinForm() {
		return "join";
	}
	
	@PostMapping("/member/join")
	public String join( @ModelAttribute MemberDTO memberDTO) {
		String joinResult = memberService.save(memberDTO);
		if(joinResult == "fail") {
			return "join";
		}else {
			
			System.out.println("MemberController.save");
			System.out.println(memberDTO);
			memberService.save(memberDTO);
			return "joinSuccess";
		}
	}
	
	@GetMapping("/member/login")
	public String loginForm() {
		return "login";
	}
	
	@PostMapping("/member/login")
	public String login(@ModelAttribute MemberDTO memberDTO, HttpSession session, Model model) {
//		MemberDTO loginResult = memberService.login(memberDTO);
		String loginResult = memberService.login(memberDTO);
		if(loginResult == "success") {
//			session.setAttribute("loginId", loginResult.getEmail());
//			System.out.println(loginResult.getEmail());
			System.out.println(loginResult);
			return "redirect:/main";
		} else if(loginResult == "password error") {
			model.addAttribute("error", "비밀번호가 일치하지 않습니다.");
			return "login";
		} else if(loginResult == "not found") {
			model.addAttribute("error", "존재하지 않는 이메일입니다.");
			return "login";
		} else {
			return "login";
		}
	}
	
	
}
