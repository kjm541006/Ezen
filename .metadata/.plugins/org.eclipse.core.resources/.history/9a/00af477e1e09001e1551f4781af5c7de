package com.jumin.springbootProject.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.jumin.springbootProject.entity.CartEntity;
import com.jumin.springbootProject.entity.MemberEntity;
import com.jumin.springbootProject.entity.ProductEntity;
import com.jumin.springbootProject.repository.CartRepository;
import com.jumin.springbootProject.repository.MemberRepository;
import com.jumin.springbootProject.repository.ProductRepository;

@Service
public class CartService {

    private final CartRepository cartRepository;
    private final MemberRepository memberRepository;
    private final ProductRepository productRepository;

    @Autowired
    public CartService(CartRepository cartRepository, MemberRepository memberRepository, ProductRepository productRepository) {
        this.cartRepository = cartRepository;
        this.memberRepository = memberRepository;
        this.productRepository = productRepository;
    }
    
    public List<CartEntity> getCartItemsByLoginId(String loginId) {
        MemberEntity member = memberRepository.findByEmail(loginId)
                .orElseThrow(() -> new RuntimeException("Member not found with loginId: " + loginId));
        
        return cartRepository.findByMember(member);
    }
    
    public void addToCart(String loginId, Long productId, int quantity) {
        // 1. 로그인된 멤버 정보 가져오기
        MemberEntity member = memberRepository.findByEmail(loginId)
                .orElseThrow(() -> new RuntimeException("Member not found with loginId: " + loginId));

        // 2. 상품 정보 가져오기
        ProductEntity product = productRepository.findById(productId)
                .orElseThrow(() -> new RuntimeException("Product not found with productId: " + productId));

        // 3. 장바구니에 상품 추가
        CartEntity cartItem = new CartEntity(product, member, quantity);
        cartRepository.save(cartItem);
    }

    public void removeFromCart(String loginId, Long productId) {
        // removeFromCart 메서드의 구현 내용
    }
    
}
